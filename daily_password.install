<?php

/**
 * Implements hook_install().
 *
 * Creates some default entries on this module custom table.
 *
 * @see hook_install()
 *
 * @ingroup daily_password
 */
function daily_password_install() {
  // Insert some example data into our schema.
  $entries = [
    [
      'usernames' => 'John',
      'frequency' => 'Daily',
      'url' => 'https://example.com',
      'header' => 'Authorization: Token xxxxxxxxx',
      'token' => 'xxxxxxxxx',
      'jsonkey' => 'password',
      'send' => TRUE,
    ],
    [
      'usernames' => 'John',
      'frequency' => 'Montly',
      'password' => 100,
      'url' => 'https://example.com',
      'header' => 'Authorization: Token xxxxxxxxx',
      'token' => 'xxxxxxxxx',
      'jsonkey' => 'password',
      'send' => FALSE,
    ],
  ];

  $connection = \Drupal::database();
  foreach ($entries as $entry) {
    $connection->insert('daily_password')->fields($entry)->execute();
  }
}


/**
 * Implements hook_schema().
 *
 * Defines the database tables used by this module.
 *
 * @see hook_schema()
 *
 * @ingroup daily_password
 */

function daily_password_schema() {
  $schema['daily_password'] = [
    'description' => 'Stores Daily Password configuration information.',
    'fields' => [
      'pid' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique configuration ID.',
      ],
      'usernames' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Usernames.',
      ],
      'frequency' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Frequency of password change.',
      ],
      'password' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Stores the generated password based on frequency.',
      ],
      'url' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'URL of API endpoint.',
      ],
      'header' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'HTTP header for API token.',
      ],
      'token' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Authentication token for API request.',
      ],
      'jsonkey' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => 'JSON key for password value in API response.',
      ],
      'send' => [
              'type' => 'varchar',
              'length' => 50,
              'not null' => FALSE,
              'default' => '',
              'description' => 'Whether to send password to API.',
      ],
    ],
    'primary key' => ['pid'],
    'indexes' => [
      'name' => ['usernames'],
      'frequency' => ['frequency'],
      'password' => ['password'],
    ],
  ];

  return $schema;
}


function daily_password_update_8001() {
  $schema = daily_password_schema();
  $table_name = 'daily_password';
  $db = \Drupal::database();

  // Add the new fields to the database table.
  foreach ($schema[$table_name]['fields'] as $field_name => $field) {
    if (!$db->schema()->fieldExists($table_name, $field_name)) {
      $db->schema()->addField($table_name, $field_name, $field);
    }
  }
}